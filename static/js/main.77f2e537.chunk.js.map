{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistics.module.css","components/Percentages/Percentages.module.css","components/Container/Container.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Container/Container.jsx","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","components/Percentages/Percentages.jsx","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","Section","title","section","FeedbackOptions","options","handleFeedback","controls","map","type","onClick","Notification","message","notification","Statistics","good","neutral","bad","total","statistics","Percentages","percentages","scale","percentage","style","width","App","state","Object","keys","setState","prevState","countTotalFeedback","values","reduce","val","countFeedbackPercentages","Math","round","this","totalFeedback","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77f2e537.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"FeedbackOptions_controls__1Zk6z\",\"button\":\"FeedbackOptions_button__3n-hy\",\"good\":\"FeedbackOptions_good__3_i5p FeedbackOptions_button__3n-hy\",\"neutral\":\"FeedbackOptions_neutral__1m1cA FeedbackOptions_button__3n-hy\",\"bad\":\"FeedbackOptions_bad__1-ciY FeedbackOptions_button__3n-hy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2QFok\",\"total\":\"Statistics_total__2pGqP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scale\":\"Percentages_scale__25bzU\",\"type\":\"Percentages_type__3E94X\",\"good\":\"Percentages_good__1nPXA Percentages_type__3E94X\",\"neutral\":\"Percentages_neutral__1E48T Percentages_type__3E94X\",\"bad\":\"Percentages_bad__Y1Vt_ Percentages_type__3E94X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1C7Ma\"};","import s from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={s.container}>{children}</div>\n);\n\nexport { Container };\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <section className={s.section}>\n    {title && <h2>{title}</h2>}\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport { Section };\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, handleFeedback }) => (\n  <div className={s.controls}>\n    {options.map(type => (\n      <button\n        key={type}\n        className={s[type]}\n        type='button'\n        onClick={() => handleFeedback(type)}\n      >\n        {type}\n      </button>\n    ))}\n  </div>\n);\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  handleFeedback: PropTypes.func.isRequired,\n};\n\nexport { FeedbackOptions };\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nconst Notification = ({ message }) => (\n  <p className={s.notification}>{message}</p>\n);\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport { Notification };\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, children }) => (\n  <>\n    <table className={s.statistics}>\n      <thead>\n        <tr>\n          <th>Good</th>\n          <th>Neutral</th>\n          <th>Bad</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        <tr>\n          <td>{good}</td>\n          <td>{neutral}</td>\n          <td>{bad}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    {children}\n\n    <p className={s.total}>\n      Total <span>{total}</span>\n    </p>\n  </>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n};\n\nexport { Statistics };\n","import PropTypes from 'prop-types';\nimport s from './Percentages.module.css';\n\nconst Percentages = ({ percentages }) => (\n  <div>\n    <h3>Percentages</h3>\n\n    <div className={s.scale}>\n      {percentages.map(({ type, percentage }) => (\n        <span\n          key={type}\n          className={s[type]}\n          style={{ width: percentage + '%' }}\n        >\n          {percentage > 6 && percentage + '%'}\n        </span>\n      ))}\n    </div>\n  </div>\n);\n\nPercentages.propTypes = {\n  percentages: PropTypes.arrayOf(\n    PropTypes.shape({\n      type: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport { Percentages };\n","import { Component } from 'react';\nimport { Container } from './components/Container';\nimport { Section } from './components/Section';\nimport { FeedbackOptions } from './components/FeedbackOptions';\nimport { Notification } from './components/Notification';\nimport { Statistics } from './components/Statistics';\nimport { Percentages } from './components/Percentages';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  options = Object.keys(this.state);\n\n  handleFeedback = type => {\n    this.setState(prevState => ({ [type]: prevState[type] + 1 }));\n  };\n\n  countTotalFeedback = () =>\n    Object.values(this.state).reduce((total, val) => total + val, 0);\n\n  countFeedbackPercentages = total =>\n    this.options.map(type => ({\n      type,\n      percentage: Math.round((this.state[type] / total) * 100) || 0,\n    }));\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalFeedback = this.countTotalFeedback();\n    const percentages = this.countFeedbackPercentages(totalFeedback);\n\n    return (\n      <Container>\n        <Section title='Please leave your feedback'>\n          <FeedbackOptions\n            options={this.options}\n            handleFeedback={this.handleFeedback}\n          />\n        </Section>\n\n        {totalFeedback ? (\n          <Section title='Statistics'>\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={totalFeedback}\n            >\n              <Percentages percentages={percentages} />\n            </Statistics>\n          </Section>\n        ) : (\n          <Notification message='No feedback given' />\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}