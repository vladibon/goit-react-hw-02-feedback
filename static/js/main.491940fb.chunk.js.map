{"version":3,"sources":["components/FeedbackOptions.jsx","components/Statistics.jsx","App.js","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","map","type","className","onClick","Statistics","good","neutral","bad","total","positivePercentage","App","state","handleFeedback","setState","prevState","countTotalFeedback","Object","values","reduce","val","countPositiveFeedbackPercentage","Math","round","keys","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAEA,SAASA,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OAAOD,EAAQE,KAAI,SAAAC,GAAI,OACrB,wBAEEC,UAAWD,EACXA,KAAK,SACLE,QAAS,kBAAMJ,EAAgBE,IAJjC,SAMGA,GALIA,MCHX,SAASG,EAAT,GAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,gCACE,yCAAYJ,KACZ,4CAAeC,KACf,wCAAWC,KAEX,0CAAaC,KACb,sDAAyBC,EAAzB,U,ICNAC,E,4MACJC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,eAAiB,SAAAX,GACf,EAAKY,UAAS,SAAAC,GAAS,sBAAQb,EAAOa,EAAUb,GAAQ,O,EAG1Dc,mBAAqB,kBACnBC,OAAOC,OAAO,EAAKN,OAAOO,QAAO,SAACV,EAAOW,GAAR,OAAgBX,EAAQW,M,EAE3DC,gCAAkC,kBAChCC,KAAKC,MAAO,EAAKX,MAAMN,KAAO,EAAKU,qBAAwB,MAAQ,G,4CAErE,WACE,OACE,sBAAKb,UAAU,WAAf,UACE,4DAEA,cAACL,EAAD,CACEC,QAASkB,OAAOO,KAAKC,KAAKb,OAC1BZ,gBAAiByB,KAAKZ,iBAGxB,4CAEA,cAACR,EAAD,CACEC,KAAMmB,KAAKb,MAAMN,KACjBC,QAASkB,KAAKb,MAAML,QACpBC,IAAKiB,KAAKb,MAAMJ,IAChBC,MAAOgB,KAAKT,qBACZN,mBAAoBe,KAAKJ,2C,GAlCjBK,aAyCHf,I,YCvCfgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.491940fb.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return options.map(type => (\n    <button\n      key={type}\n      className={type}\n      type='button'\n      onClick={() => onLeaveFeedback(type)}\n    >\n      {type}\n    </button>\n  ));\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport { FeedbackOptions };\n","import PropTypes from 'prop-types';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <div>\n      <div>Good: {good}</div>\n      <div>Neutral: {neutral}</div>\n      <div>Bad: {bad}</div>\n\n      <div>Total: {total}</div>\n      <div>Positive feedback: {positivePercentage}%</div>\n    </div>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport { Statistics };\n","import { Component } from 'react';\nimport { FeedbackOptions } from './components/FeedbackOptions';\nimport { Statistics } from './components/Statistics';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleFeedback = type => {\n    this.setState(prevState => ({ [type]: prevState[type] + 1 }));\n  };\n\n  countTotalFeedback = () =>\n    Object.values(this.state).reduce((total, val) => total + val);\n\n  countPositiveFeedbackPercentage = () =>\n    Math.round((this.state.good / this.countTotalFeedback()) * 100) || 0;\n\n  render() {\n    return (\n      <div className='feedback'>\n        <h2>Please leave your feedback</h2>\n\n        <FeedbackOptions\n          options={Object.keys(this.state)}\n          onLeaveFeedback={this.handleFeedback}\n        />\n\n        <h2>Statistics</h2>\n\n        <Statistics\n          good={this.state.good}\n          neutral={this.state.neutral}\n          bad={this.state.bad}\n          total={this.countTotalFeedback()}\n          positivePercentage={this.countPositiveFeedbackPercentage()}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}